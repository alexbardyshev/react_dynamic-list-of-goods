{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","style","color","name","id","getAll","fetch","then","response","ok","Error","status","statusText","json","App","useState","setGoods","hasLoadingError","setLoadingError","type","onClick","goodsList","catch","sort","good1","good2","localeCompare","sortedGoods","filter","_el","index","ReactDOM","render","document","getElementById"],"mappings":"8NAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,oBAAIC,UAAU,8BAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRF,UAAU,kBACVG,MAAO,CAAEC,MAAOF,EAAKE,OAJvB,SAMGF,EAAKG,MALDH,EAAKI,U,OCPb,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,UAIf,ICTMC,EAAgB,WAC3B,MAA0BC,mBAAwB,MAAlD,mBAAOlB,EAAP,KAAcmB,EAAd,KACA,EAA2CD,oBAAS,GAApD,mBAAOE,EAAP,KAAwBC,EAAxB,KAEA,OACE,sBAAKpB,UAAU,gBAAf,UACE,uDAEA,sBAAKA,UAAU,UAAf,UACE,wBACEqB,KAAK,SACLrB,UAAU,iCACV,UAAQ,aACRsB,QAAS,WACPf,IACGE,MAAK,SAAAc,GAAS,OAAIL,EAASK,MAC3BC,OAAM,kBAAMJ,GAAgB,OAPnC,4BAaA,wBACEC,KAAK,SACLrB,UAAU,iCACV,UAAQ,oBACRsB,QAAS,WDhBVf,IACJE,MAAK,SAAAV,GACJ,OAAO,YAAIA,GAAO0B,MAAK,SAACC,EAAaC,GACnC,OAAOD,EAAMrB,KAAKuB,cAAcD,EAAMtB,YAGzCI,MAAK,SAAAoB,GACJ,OAAOA,EAAYC,QAAO,SAACC,EAAKC,GAAN,OAAgBA,EAAQ,QCWzCvB,MAAK,SAAAc,GAAS,OAAIL,EAASK,MAC3BC,OAAM,kBAAMJ,GAAgB,OAPnC,gCAaA,wBACEpB,UAAU,iCACVqB,KAAK,SACL,UAAQ,aACRC,QAAS,WDjBVf,IACJE,MAAK,SAAAV,GACJ,OAAOA,EAAM+B,QAAO,SAAA5B,GAAI,MAAmB,QAAfA,EAAKE,YCiBxBK,MAAK,SAAAc,GAAS,OAAIL,EAASK,MAC3BC,OAAM,kBAAMJ,GAAgB,OAPnC,+BAcAD,EAGE,kEAFCpB,GAAS,cAAC,EAAD,CAAWA,MAAOA,QCtDtCkC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f7a12288.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul className=\"list-group list-group-flush\">\n      {goods.map(good => (\n        <li\n          key={good.id}\n          data-cy=\"good\"\n          className=\"list-group-item\"\n          style={{ color: good.color }}\n        >\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => {\n      return [...goods].sort((good1: Good, good2: Good): number => {\n        return good1.name.localeCompare(good2.name);\n      });\n    })\n    .then(sortedGoods => {\n      return sortedGoods.filter((_el, index) => index < 5);\n    });\n};\n\nexport const getRed = () => {\n  return getAll()\n    .then(goods => {\n      return goods.filter(good => good.color === 'red');\n    });\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRed } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[] | null>(null);\n  const [hasLoadingError, setLoadingError] = useState(false);\n\n  return (\n    <div className=\"App container\">\n      <h1>Dynamic list of Goods</h1>\n\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className=\"button btn btn-outline-primary\"\n          data-cy=\"all-button\"\n          onClick={() => {\n            getAll()\n              .then(goodsList => setGoods(goodsList))\n              .catch(() => setLoadingError(true));\n          }}\n        >\n          Load all goods\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button btn btn-outline-primary\"\n          data-cy=\"first-five-button\"\n          onClick={() => {\n            get5First()\n              .then(goodsList => setGoods(goodsList))\n              .catch(() => setLoadingError(true));\n          }}\n        >\n          Load 5 first goods\n        </button>\n\n        <button\n          className=\"button btn btn-outline-primary\"\n          type=\"button\"\n          data-cy=\"red-button\"\n          onClick={() => {\n            getRed()\n              .then(goodsList => setGoods(goodsList))\n              .catch(() => setLoadingError(true));\n          }}\n        >\n          Load red goods\n        </button>\n      </div>\n\n      {!hasLoadingError\n        ? (goods && <GoodsList goods={goods} />)\n        : (\n          <div>\n            Something went wrong, try later\n          </div>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}